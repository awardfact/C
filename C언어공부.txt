C언어는 1970년도 벨 연구소에서 만들어져 현재까지 사용되는 프로그래밍 언어이다 
C언어는 이후에 생긴 언어에 많은 영향을 주었다

Chapter1

C언어의 역사 

C언어는 UNIX운영체제의 부산물로 생성되었다 벨 연구소의 켄 톰슨, 데니스 리치등의 C언어를 만들었다 
그 당시에 다른 운영체제들은 어셈블리 언어로 만들어졌는데 어셈블리는 디버그가 힘들고 성능을 향상시키기가 매우 어려웠다
UNIX도 예외는 아니였는데 톰슨은 이러한 문제를 해결하고 UNIX를 더 발전시키기 위해 
높은 레벨의 언어가 필요하다 생각했고 그는 B언어를 디자인했다 하지만 B언어는 PDP-11에 맞지 않다고 생각했고
리치는 더 향상된 버전을 개발했다 처음에는 NEW B언어로 불렸는데 유닉스가 1973년 C언어로 재개발 되었을 때 C언어로 불리게 되었다 
C언어는 70년대에 지속적으로 발전되었다 77~79년이 특히 그런데 이 기간동안 첫 C언어 책이 나오게 되었고 C프로그래머에게
바이블이 되었다 70년대에는 C프로그래머가 비교적 적고 대부분 유닉스 유저였는데 80년대에 들어와서 C컴파일러는
다양한 운영체제에서 사용되게 되였다 특히 IBM PC플랫폼에서 빠르게 성장했다 
C언어가 유명해지고 문제가 찾아왔는데 C컴파일러는 K&R에 의지하였는데 K&R은 언어의 특징이 모호하였고 
이 특징이 자주 다르게 사용되었다 또한 K&R은 이 특징들을 명확히 하는데에 실패했다 그리고 C언어는
K&R이 쓰여진 이후에도 계속적으로 바뀌었다 새로운 특징이 추가되고 오래된 특징은 삭제되었다 
그래서 C언어에 대한 명확한 설명이 필요해졌고 1983년부터 ANSI에서 표준을 만들기 시작하였고 
1989년에 공식적으로 ANSI표준이 승인되었다 이 표준을 C89또는 C90으로 부른다 그리고 이것은 C의 오리지널 버전으로
불리는 K&R과 분리되어진다 
95년에 여러 변화가 있었고 새로운 표준이 필요해졌고 99년에 C99로 불리는 새로운 표준이 승인되었다 


C언어 기반으로 만들어진 언어

C언어는 현대 언어에 거대한 영향을 주었고 아주 많은 언어가 C언어 기반으로 제작되었는데 그 중 중요한 언어는 다음과 같다
- C++  : C언어의 모든 특징을 가지고 있고 클래스와 다른 기능이 추가되었고 객체지향 프로그래밍 언어이다
- JAVA :  C++언어 기반으로 작성되어서 C언어의 많은 특징을 가지고 있다  
- C# : C++과 자바를 기반으로 만든 더 최신 언어이다 
- Perl : 원래는 간단한 스크립트 언어였는데 성장하면서 C언어의 많은 특징을 이식하였다 
C를 배우면 C기반으로 제작된 언어들을 배울때 강력한 통찰력을 주기 때문에 첫 언어로 C를 많이 배운다
그리고 C로 작성된 많은 오래된 코드들이 있어서 C언어를 배우면 이러한 코드를 유지보수 할 수 있다 
C는 여전히 개발에 널리 사용되는 언어이다 특히 메모리가 제한된 환경에서 아주 강력하다 


C언어의 강점과 약점

C의 특징
어느 프로그래밍 언어처럼 C언어도 강점과 약점을 가지고 있다 다음은 C언어의 근본적인 특징들이다
- C언어는 로우 레벨 언어이다  : C는 기계 레벨에 접근을 제공한다 이것은 다른 언어들에게는 감춰진 것이다
또한 컴퓨터에 내장된 명령과 가까워서 프로그램이 아주 빠르다 
- C언어는 작은 언어이다 : C언어는 다른 언어들이 제공하는 특징들이 제한된다 작은 언어의 특징을 가지고 있어서
C언어는 내장된 기본 함수에 의지한다 
- C언어는 자유로운 언어이다 : C언어는 많은 것들을 허용해서 다른 언어들에 비해 자유롭다 또한 다른 언어에서 강제하는
오류확인을 강제하지 않는다 


C의 강점
효율적이다 : C는 어셈블리가 사용될 때 만들어졌기 때문에 아주 빠르고 메모리 양이 제한된다 

이식성이 좋다 : 이식성은 프로그램의 주된 목적은 아니지만 강점중 하나이다 
 프로그램은 컴퓨터에서 동작하는데 PC부터 슈퍼컴퓨터까지 범위가 다양하기 때문에 C언어를 체택하는 경우도 많이 있다
C언어의 컴파일러는 작고 쉽게 쓰여졌다 이러한 특징이 다양한 가능성을 준다 

강력하다 : C는 다양한 데이터 타입과 연산이 있어 아주 작은 코드와 라인으로도 프로그램을 만들 수 있다

유연하다 :  C는 시스템 프로그래밍을 위해 디자인되었지만 이것에 대한 제약은 없다 C는 임베디드부터 상업적 데이터
프로그램까지 모든 분야에 사용된다 

기본 라이브러리가 존재한다 : C의 강점으로 기본 라이브러리가 있는데 이 라이브러리에는 입출력, 문자열 , 저장 할당 등
여러 유용한 수백가지의 함수가 존재한다

유닉스와의 통합 : C는 특히 유닉스와 강력하게 결합된다 

C의 약점
C의 약점은 기계와 가깝다는 C의 강점에 기반하기도 한다 

에러가 생기기 쉽다 : C의 유연성은 에러를 유발하기도 한다 C컴파일러는 다른 언어의 실수를 발견하지 못하는 경우가 많다
이런 점에서 C는 어셈블리와 많이 닮아있다 대부분의 에러는 실행동안 발견하지 못해서 더 많은 문제를 야기한다 
C는 또한 부주의했을 때 눈에 안 띄는 문제를 많이 가지고 있다 

이해하기가 어렵다 :  비록 C는 작은 언어이지만 다양한 방법으로 결합되기 떄문에 타인이 이해하기 어려운 경우가 많다
C의 간결함 때문에도 문제가 방생하는데 간결함을 목적으로 만들어졌기 때문에 읽고 수정하는데 많은 시간이 걸린다 
C의 유연성도 영향을 주는데 천재들이 자기만 알아보게 코드를 작성하면 이해하는게 거의 불가능하다 

수정하기가 어렵다 : C로 작성된 큰 프로그램은 제작될 때 유지보수를 고려하지 않았다면 수정이 매우 어렵다 
현대의 프로그래밍 언어 수정에 용이한 모듈과 클래스를 제공하는데 C언어는 이런 특징이 없다 